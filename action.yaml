name: Git Shared Action Release Action
description: Utilized for creating releases of shared actions

# Inputs
inputs:
  ikmdevops_pat:
    description: "PAT TOKEN for IKMDevops User"
    required: true
  ikmdevops_email:
    description: "Email For IKMDevops User"
    default: 'devops@ikm.dev'
  github_token:
    description: "GitHub Token"
    required: true
  release_type:
    description: "Release Type Inputed"
    required: true
  
  

runs:
  using: "composite" 
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4.2.2
      with:
        token: ${{inputs.ikmdevops_pat}}
        fetch-depth: 0

    - name: Get Latest Release Tag
      id: getLatestTag
      shell: bash
      run: |
            git fetch --tags
            TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "TAG: " $TAG

            if [ $TAG == '' ]; then
                echo "LATEST_TAG=0.0.0" >> $GITHUB_OUTPUT
            else
                echo "LATEST_TAG=$(echo "$TAG" | sed "s/v//")" >> $GITHUB_OUTPUT
            fi

    - name: Split Tag String
      uses: xom9ikk/split@v1.1
      id: splitTagString
      with:
          string: ${{steps.getLatestTag.outputs.LATEST_TAG}}
          separator: .
          limit: -1

    - name: "[${{inputs.release_type}}] Increment Tag Version"
      id: incrementedTagVersion
      shell: bash
      run: |
          if [ $RELEASE_TYPE == 'Major' ]; then
            echo "NEW_RELEASE_TAG=$(($MAJOR_STRING + 1)).0.0" >> $GITHUB_OUTPUT
          elif [ $RELEASE_TYPE == 'Minor' ]; then
            echo "NEW_RELEASE_TAG=${MAJOR_STRING}.$(($MINOR_STRING + 1)).0" >> $GITHUB_OUTPUT
          else
            echo "NEW_RELEASE_TAG=${MAJOR_STRING}.${MINOR_STRING}.$(($PATCH_STRING + 1))" >> $GITHUB_OUTPUT
          fi
      env:
          RELEASE_TYPE: ${{inputs.release_type}}
          MAJOR_STRING: ${{steps.splitTagString.outputs._0}}
          MINOR_STRING: ${{steps.splitTagString.outputs._1}}
          PATCH_STRING: ${{steps.splitTagString.outputs._2}}

    - name: "[${{inputs.release_type}}] Create & Push Tag -- ${{steps.incrementedTagVersion.outputs.NEW_RELEASE_TAG}}"
      shell: bash
      run: |
          git remote set-url origin https://git:${{inputs.ikmdevops_pat}}@github.com/${{github.repository}}.git
          git pull -p
          git config user.name "ikmdevops"
          git config user.email devops@ikm.dev
          git tag -a v$NEW_RELEASE_TAG -m"Release Version $NEW_RELEASE_TAG"
          git push --tags origin
      env:
          NEW_RELEASE_TAG: ${{steps.incrementedTagVersion.outputs.NEW_RELEASE_TAG}}

    - name: "[${{inputs.release_type}}] Create Release -- ${{steps.incrementedTagVersion.outputs.NEW_RELEASE_TAG}}"
      shell: bash
      run: |
         curl -L \
           -X POST \
           -H "Accept: application/vnd.github+json" \
           -H "Authorization: Bearer ${{inputs.github_token}}" \
           -H "X-GitHub-Api-Version: 2022-11-28" \
           https://api.github.com/repos/${{github.repository}}/releases \
          -d '{"tag_name":"v${{steps.incrementedTagVersion.outputs.NEW_RELEASE_TAG}}","name":"v${{steps.incrementedTagVersion.outputs.NEW_RELEASE_TAG}}","body":"Release v${{steps.incrementedTagVersion.outputs.NEW_RELEASE_TAG}}","draft":false,"prerelease":false,"generate_release_notes":false}'

        

        

   
